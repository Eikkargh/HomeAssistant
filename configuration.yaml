## Loads default set of integrations. Do not remove.
default_config:

# Text to speech
tts:
  - platform: google_translate

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

frontend:
  extra_module_url:
    - /local/community/lovelace-card-mod/card-mod.js

#Plant waterer Pump
mqtt:
  button:
    - unique_id: waterer_pump_button
      name: "Water Plant"
      command_topic: "waterer/waterpump"
      payload_press: "Requested"
      qos: 1
      retain: false
    - unique_id: waterer_config_submit
      name: "Waterer Config Submit"
      command_topic: "waterer/config"
      payload_press: >
        {
          "calibrate": "False",
          "settings": {
            "min_moisture": 48200,
            "max_moisture": 18000,
            "message_interval": 3600,
            "max_threshold": 80,
            "min_threshold": 10,
            "max_water_cycles": 4,
            "pump_on_time": 2,
            "pump_interval": 10,
            "reboot_days": 0
          }
        }
      qos: 1
      retain: false
  sensor:
    - name: "Waterer Moisture"
      state_topic: "waterer/moisture"
      unit_of_measurement: "%"
    - name: "Waterer Status"
      state_topic: "waterer/status"
    - name: "Waterer Pump"
      state_topic: "waterer/waterpump"

sensor:
#   Get time/date
  - platform: time_date
    display_options:
      - 'time'
      - 'date'

#   Get switchbot sensors and lights
  - platform: command_line
    name: 'Kid Room Sensor'
    scan_interval: 600
    command_timeout: 30
    command: !secret SwitchbotSensorCmd
    value_template: '{{ value_json }}'
    json_attributes:
      - temperature
      - humidity
  - platform: command_line
    name: 'Dining Motion'
    scan_interval: 60
    command_timeout: 30
    command: !secret SwitchbotMotionCmd
    value_template: '{{ value_json }}'
    json_attributes:
      - moveDetected
      - brightness
  - platform: command_line
    name: 'Bedroom - Strip Light'
    scan_interval: 30
    command_timeout: 30
    command: !secret SwitchbotLightCmd
    value_template: '{{ value_json }}'
    json_attributes:
      - power
      - brightness
      - color
    
#Candy washer Dryer sensor
  - platform: command_line
    name: 'Candy Washer Dryer'
    scan_interval: 60
    command_timeout: 30
    command: python3 ./pyscript/candy.py
    value_template: '{{ value_json }}'
    json_attributes:
      - WiFiStatus
      - Err
      - MachMd
      - Pr
      - PrPh
      - Temp
      - SpinSp
      - RemTime
      - DryT
      - DelVal
      - TotalTime

#Switchbot post command
rest_command:
  switchbot_device_command:
    url: 'https://api.switch-bot.com/v1.0/devices/{{ deviceId }}/commands'
    method: post
    headers:
      Authorization: !secret SwitchbotAPI
      Content-Type: 'application/json'
    payload: '{"command":"{{ command }}","parameter":"{{ parameter }}","commandType":"{{ commandType }}"}'

#Switchbot Light Strip
light:
  - platform: template
    lights:
      bedroom_strip_light:
        friendly_name: "Bedroom - Strip Light"
        unique_id: light.bedroom_strip_light
        icon_template: mdi:led-strip-variant
        temperature_template: "{{states('input_number.temperature_input') | int}}"
        level_template: "{{ state_attr('sensor.bedroom_strip_light', 'brightness') | int }}"
        color_template: "[{{ state_attr('sensor.bedroom_strip_light', 'color')[0] }},{{ state_attr('sensor.bedroom_strip_light','color')[1] }},{{ state_attr('sensor.bedroom_strip_light','color')[2] }}]"
        value_template: "{{ state_attr('sensor.bedroom_strip_light', 'power') }}"
        turn_on:
          service: rest_command.switchbot_device_command
          data:
            deviceId: !secret SwitchbotLightId
            command: "turnOn"
            parameter: "default"
            commandType: "command"
        turn_off: 
          service: rest_command.switchbot_device_command
          data:
            deviceId: !secret SwitchbotLightId
            command: "turnOff"
            parameter: "default"
            commandType: "command"
        set_level:
          service: rest_command.switchbot_device_command
          data:
            deviceId: !secret SwitchbotLightId
            command: "setBrightness"
            parameter: "{{brightness}}"
            commandType: "command"

#switchbot scene commands
shell_command:
  living_room_tv_mute: !secret SwitchbotSceneTvMute
  living_room_tv_exit: !secret SwitchbotSceneTvExit
  living_room_tv_input: !secret SwitchbotSceneTvInput
  living_room_tv_up: !secret SwitchbotSceneTvUp
  living_room_tv_down: !secret SwitchbotSceneTvDown

#switchbot scene activate
switch:
  - platform: command_line
    switches:
      living_room_tv_power:
        friendly_name: "Living Room - TV Power"
        command_on: !secret SwitchbotSceneTvOn
        command_off: !secret SwitchbotSceneTvOff

template:

#switchbot TV buttons
  - button:
    - name: "Living Room - TV Mute"
      icon: mdi:volume-mute
      press:
        service: shell_command.living_room_tv_mute
  - button:
    - name: "Living Room - TV Up"
      icon: mdi:volume-plus
      press:
        service: shell_command.living_room_tv_up
  - button:
    - name: "Living Room - TV Down"
      icon: mdi:volume-minus"
      press:
        service: shell_command.living_room_tv_down
  - button:
    - name: "Living Room - TV Exit"
      icon: mdi:backburger
      press:
        service: shell_command.living_room_tv_exit
  - button:
    - name: "Living Room - TV Input"
      icon: mdi:video-input-hdmi
      press:
        service: shell_command.living_room_tv_input
# Date
  - sensor:
      - name: 'date long'
        state: "{{ as_timestamp(states('sensor.date')) | timestamp_custom('%a %-d %b %Y') }}"

#   Switchbot Sensor
  - sensor:
      - name: 'Kid Room Temp'
        unit_of_measurement: 'Â°C'
        icon: mdi:thermometer
        state: "{{ state_attr('sensor.kid_room_sensor', 'temperature') }}"
  - sensor:
      - name: 'Kid Room Humidity'
        unit_of_measurement: '%'
        icon: mdi:water-percent
        state: "{{ state_attr('sensor.kid_room_sensor', 'humidity') }}"

#   Switchbot Motion
  - sensor:
      - name: 'Dining Motion Dectected'
        icon: mdi:motion-sensor
        state: "{{ state_attr('sensor.dining_motion', 'moveDetected') }}"
  - sensor:
      - name: 'Dining Motion Brightness'
        icon: mdi:brightness-6
        state: "{{ state_attr('sensor.dining_motion', 'brightness') }}"

#   Washer Dryer
  - sensor:
      - name: 'Washer/Dryer - WiFi'
        icon: mdi:washing-machine
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'WiFiStatus') == '0' %} 
            On
          {% elif state_attr('sensor.candy_washer_dryer', 'WiFiStatus') == '1' %}
            Off
          {% else %} 
            {{ state_attr('sensor.candy_washer_dryer', 'WiFiStatus') }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Error'
        icon: mdi:alert-circle
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'Err') == '255' %}
            No Errors
          {% elif state_attr('sensor.candy_washer_dryer', 'Err') is number %}
            {{ state_attr('sensor.candy_washer_dryer', 'Err') }}
          {% else %}
            None
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Status'
        icon: mdi:chart-pie
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'MachMd') == "1" %}
            Not Started
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == "2" %}
            Running
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == "3" %}
            Paused
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == "4" %}
            Setting Up
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == "5" %}
            Delayed
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == "7" %}
            Finished
          {% elif state_attr('sensor.candy_washer_dryer', 'MachMd') == None %}
            Off
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'MachMd') }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Program'
        icon: mdi:progress-star
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'Pr') == "1" %}
            Special
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "2" %}
            Cotton
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "3" %}
            Colour
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "4" %}
            Daily
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "5" %}
            Rapid
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "11" %}
            Bed Linen
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "12" %}
            Dry Low
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "13" %}
            Dry High
          {% elif state_attr('sensor.candy_washer_dryer', 'Pr') == "17" %}
            Hygeine
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'Pr') }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Phase'
        icon: mdi:progress-question
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'PrPh') == "0" %}
            Delayed
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "1" %}
            Prewash
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "2" %}
            Wash
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "3" %}
            Rinse
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "4" %}
            Last Rinse
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "5" %}
            End
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "6" %}
            Drying
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "7" %}
            Error
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "8" %}
            Steam
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "9" %}
            Goodnight
          {% elif state_attr('sensor.candy_washer_dryer', 'PrPh') == "10" %}
            Spin
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'PrPh') }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Wash Temp'
        icon: mdi:thermometer-lines
        unit_of_measurement: 'Â°C'
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'Temp') == None %}
            None
          {% elif state_attr('sensor.candy_washer_dryer', 'Temp') == "0" %}
            Off
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'Temp') }}
          {% endif %} 
  - sensor:
      - name: 'Washer/Dryer - Spin Speed'
        icon: mdi:speedometer
        state: >
          {% if  state_attr('sensor.candy_washer_dryer', 'SpinSp') == None %}
            None
          {% elif  state_attr('sensor.candy_washer_dryer', 'SpinSp') == "0" %}
            Off
          {% else %}
            {{ (state_attr('sensor.candy_washer_dryer', 'SpinSp') | int) * 100  }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Wash Time'
        icon: mdi:timer
        unit_of_measurement: 'mins'
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'RemTime') == None %}
            0
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'RemTime') | int }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Dry Time'
        icon: mdi:clock-time-four
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'DryT') == None %}
            Off
          {% elif state_attr('sensor.candy_washer_dryer', 'DryT') == "0" %}
            Dry Off
          {% elif state_attr('sensor.candy_washer_dryer', 'DryT') == "3" %}
            Iron Dry
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'DryT') }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Delay Time'
        icon: mdi:timer
        unit_of_measurement: 'hours'
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'DelVal') == None %}
            0
          {% else %}
            {{ state_attr('sensor.candy_washer_dryer', 'DelVal') | int }}
          {% endif %}
  - sensor:
      - name: 'Washer/Dryer - Total Time'
        icon: mdi:timer
        state: >
          {% if state_attr('sensor.candy_washer_dryer', 'TotalTime') == None %}
            Off
          {% else %}
            {{ states('sensor.washer_dryer_phase') }} - {{ state_attr('sensor.candy_washer_dryer', 'TotalTime') }} mins
          {% endif %}
